@import url('https://fonts.googleapis.com/css2?family=VT323&display=swap');

* {
  box-sizing: border-box;
}

body {
  background-color: black;
  color: #00ff00;

  margin: 0;
  padding: 0;

  font-family: 'VT323', monospace;
  font-size: 1.2rem;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* background: linear-gradient(#d0d6d9, #b1b4ba); */

  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
}

.control,
fieldset {
  margin: 0.5rem 0;
}

.control.no-margin {
  margin-bottom: 0;
}

.control label {
  display: block;
  font-size: 0.8rem;
  margin-bottom: 0.2rem;
  color: #9bafaf;
  text-transform: uppercase;
  font-weight: bold;
}

.control input {
  display: block;
  width: 100%;
  max-width: 15rem;
  padding: 0.5rem;
  font-size: 1rem;
  border-radius: 4px;
  border: 1px solid #758a8a;
  background-color: #869999;
  color: #142020;
}

.control select {
  display: block;
  width: 100%;
  max-width: 15rem;
  padding: 0.5rem;
  font-size: 1rem;
  border-radius: 4px;
  border: 1px solid #758a8a;
  background-color: #869999;
  color: #142020;
}

.control:has(input[type="checkbox"]) {
  display: flex;
  align-items: center;
}

.control:has(input[type="checkbox"]) label {
  margin: 0;
}

.control input[type="checkbox"] {
  display: inline-block;
  width: auto;
  max-width: none;
  margin-right: 0.5rem;
  border-radius: 0;
  border: none;
  background-color: transparent;
  color: #d9e2f1;
}

.control-error {
  display: flex;
  flex-wrap: wrap;
  gap: 0.5rem;
  color: #ffca99;
  height: 0.5rem;
  padding: 0.25rem 0 0 0;
  height: 1.5rem;
  margin-bottom: 1rem;
}

.control-error p {
  margin: 0;
}

.control-row {
  margin: 0.5rem 0;
  display: flex;
  flex-wrap: wrap;
  justify-content: flex-start;
  gap: 0.5rem;
}

.control-row .control {
  flex: 1;
}

hr {
  margin: 1.5rem 0;
  border: 1px solid #147b73;
}

.form-actions {
  display: flex;
  justify-content: flex-end;
  gap: 1rem;
}

.control:has(.ng-invalid.ng-touched.ng-dirty) label {
  color: #f98b75;
}

input.ng-invalid.ng-touched.ng-dirty {
  background-color: #fbdcd6;
  border-color: #f84e2c;
}

/* Pour ajouter une animation de type "glitch" sur le texte */
@keyframes glitch {
  0% {
      text-shadow: 2px 0px 2px #00ff00;
  }

  20% {
      text-shadow: -2px 0px 2px #00ff00;
  }

  40% {
      text-shadow: 2px -2px 2px #00ff00;
  }

  60% {
      text-shadow: -2px 2px 2px #00ff00;
  }

  80% {
      text-shadow: 0px 0px 10px #00ff00;
  }

  100% {
      text-shadow: 0px 0px 0px #00ff00;
  }
}

/* Simulation de l'effet "code qui tombe" comme dans Matrix */
@keyframes fall {
  0% {
      transform: translateY(-100vh);
  }

  100% {
      transform: translateY(100vh);
  }
}